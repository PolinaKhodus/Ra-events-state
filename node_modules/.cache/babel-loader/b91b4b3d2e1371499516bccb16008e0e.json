{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u043E\\u043B\\u0438\\u043D\\u0430\\\\Desktop\\\\___REACT___\\\\Ra-events-state\\\\src\\\\components\\\\Portfolio\\\\Portfolio.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Toolbar from './Toolbar';\nimport ProjectList from './ProjectList';\nimport portfolioProjects from '../../data/portfolio';\nimport { getFilters } from '../../functions/portfolioFunctions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Portfolio() {\n  _s();\n\n  const filters = getFilters(portfolioProjects);\n  const data = portfolioProjects;\n  const [projects, setFilteredProgects] = useState(data);\n  const [selected, setFilter] = useState('All');\n\n  const onFilterClick = filterName => {\n    if (filterName === selected) return;\n    setFilter(prev => prev = filterName);\n\n    if (filterName === 'All') {\n      setFilteredProgects(data);\n    } else {\n      setFilteredProgects(data.filter(prj => prj.category === filterName));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      filters: filters,\n      selected: selected,\n      onSelectFilter: onFilterClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectList, {\n      projects: projects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Portfolio, \"cI4CGN6ApQ7PMkATb4J0T/alfOo=\");\n\n_c = Portfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"sources":["C:/Users/Полина/Desktop/___REACT___/Ra-events-state/src/components/Portfolio/Portfolio.js"],"names":["useState","Toolbar","ProjectList","portfolioProjects","getFilters","Portfolio","filters","data","projects","setFilteredProgects","selected","setFilter","onFilterClick","filterName","prev","filter","prj","category"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,SAASC,UAAT,QAA2B,oCAA3B;;;AAGA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAMC,OAAO,GAAGF,UAAU,CAACD,iBAAD,CAA1B;AACA,QAAMI,IAAI,GAAGJ,iBAAb;AAEA,QAAM,CAACK,QAAD,EAAWC,mBAAX,IAAkCT,QAAQ,CAACO,IAAD,CAAhD;AACA,QAAM,CAACG,QAAD,EAAWC,SAAX,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMY,aAAa,GAAIC,UAAD,IAAgB;AACpC,QAAIA,UAAU,KAAKH,QAAnB,EAA6B;AAE7BC,IAAAA,SAAS,CAAEG,IAAD,IAAUA,IAAI,GAAGD,UAAlB,CAAT;;AAEA,QAAGA,UAAU,KAAK,KAAlB,EAAyB;AACvBJ,MAAAA,mBAAmB,CAACF,IAAD,CAAnB;AACD,KAFD,MAEO;AACLE,MAAAA,mBAAmB,CAACF,IAAI,CAACQ,MAAL,CAAaC,GAAD,IAASA,GAAG,CAACC,QAAJ,KAAiBJ,UAAtC,CAAD,CAAnB;AACD;AACF,GAVD;;AAYA,sBACE;AAAA,4BACE,QAAC,OAAD;AACE,MAAA,OAAO,EAAEP,OADX;AAEE,MAAA,QAAQ,EAAEI,QAFZ;AAGE,MAAA,cAAc,EAAEE;AAHlB;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEJ;AAAvB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD;;GA7BuBH,S;;KAAAA,S","sourcesContent":["import { useState } from 'react';\r\nimport Toolbar from './Toolbar';\r\nimport ProjectList from './ProjectList';\r\n\r\nimport portfolioProjects from '../../data/portfolio';\r\nimport { getFilters } from '../../functions/portfolioFunctions';\r\n\r\n\r\nexport default function Portfolio() {\r\n  const filters = getFilters(portfolioProjects);\r\n  const data = portfolioProjects;\r\n  \r\n  const [projects, setFilteredProgects] = useState(data);\r\n  const [selected, setFilter] = useState('All');\r\n\r\n  const onFilterClick = (filterName) => {    \r\n    if (filterName === selected) return;    \r\n    \r\n    setFilter((prev) => prev = filterName);  \r\n\r\n    if(filterName === 'All') {\r\n      setFilteredProgects(data);\r\n    } else {\r\n      setFilteredProgects(data.filter((prj) => prj.category === filterName));\r\n    }\r\n  }\r\n    \r\n  return (\r\n    <>\r\n      <Toolbar \r\n        filters={filters}\r\n        selected={selected}\r\n        onSelectFilter={onFilterClick}\r\n      />\r\n      <ProjectList projects={projects}/>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}