{"ast":null,"code":"export function getFilters(projects) {\n  const allCategories = projects.map(item => item.category);\n  const filters = ['All'].concat(Array.from(new Set(allCategories)));\n  return filters;\n}\nexport function getColumns(projects) {\n  let columns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n  const listByColumns = [];\n  const [...copy] = projects;\n\n  for (let i = columns; i > 0; i--) {\n    const amount = copy.length / i;\n    const slicer = copy.length % i ? Math.floor(amount) + 1 : amount;\n    listByColumns.push(copy.splice(0, slicer));\n  }\n\n  return listByColumns;\n}","map":{"version":3,"sources":["C:/Users/Полина/Desktop/___REACT___/Ra-events-state/src/functions/portfolioFunctions.js"],"names":["getFilters","projects","allCategories","map","item","category","filters","concat","Array","from","Set","getColumns","columns","listByColumns","copy","i","amount","length","slicer","Math","floor","push","splice"],"mappings":"AAAA,OAAO,SAASA,UAAT,CAAoBC,QAApB,EAA8B;AACjC,QAAMC,aAAa,GAAGD,QAAQ,CAACE,GAAT,CAAcC,IAAD,IAAUA,IAAI,CAACC,QAA5B,CAAtB;AACA,QAAMC,OAAO,GAAG,CAAC,KAAD,EAAQC,MAAR,CAAgBC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQR,aAAR,CAAX,CAAhB,CAAhB;AAEA,SAAOI,OAAP;AACD;AAED,OAAO,SAASK,UAAT,CAAoBV,QAApB,EAA2C;AAAA,MAAbW,OAAa,uEAAH,CAAG;AAChD,QAAMC,aAAa,GAAG,EAAtB;AACA,QAAM,CAAC,GAAGC,IAAJ,IAAYb,QAAlB;;AAEA,OAAI,IAAIc,CAAC,GAAGH,OAAZ,EAAqBG,CAAC,GAAG,CAAzB,EAA4BA,CAAC,EAA7B,EAAiC;AAC/B,UAAMC,MAAM,GAAGF,IAAI,CAACG,MAAL,GAAcF,CAA7B;AACA,UAAMG,MAAM,GAAGJ,IAAI,CAACG,MAAL,GAAcF,CAAd,GAAkBI,IAAI,CAACC,KAAL,CAAWJ,MAAX,IAAqB,CAAvC,GAA2CA,MAA1D;AACAH,IAAAA,aAAa,CAACQ,IAAd,CAAmBP,IAAI,CAACQ,MAAL,CAAY,CAAZ,EAAeJ,MAAf,CAAnB;AACD;;AAED,SAAOL,aAAP;AACD","sourcesContent":["export function getFilters(projects) {\r\n    const allCategories = projects.map((item) => item.category);\r\n    const filters = ['All'].concat( Array.from(new Set(allCategories)));\r\n  \r\n    return filters;\r\n  }\r\n  \r\n  export function getColumns(projects, columns = 3) {\r\n    const listByColumns = [];\r\n    const [...copy] = projects;  \r\n  \r\n    for(let i = columns; i > 0; i--) {\r\n      const amount = copy.length / i;\r\n      const slicer = copy.length % i ? Math.floor(amount) + 1 : amount;        \r\n      listByColumns.push(copy.splice(0, slicer));\r\n    }\r\n    \r\n    return listByColumns;\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}